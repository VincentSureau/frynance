name: Deploy

on:
  push:
    branches: [ "feature/deploy", "prod" ]
  pull_request:
    branches: [ "feature/deploy", "prod" ]

permissions:
  contents: read

jobs:
  # run tests
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
    #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
    # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
    # uses: shivammathur/setup-php@v2
    - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
      with:
        php-version: '8.2'
    - uses: actions/checkout@v3
    - name: Copy .env.test.local
      run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Create Database
      run: |
        mkdir -p data
        touch data/data.db
    - name: Update Database
      run: |
        php bin/console doctrine:schema:update -f --complete --env=test

    - name: Set Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: Run install
      uses: borales/actions-yarn@v4
      with:
        cmd: install 

    - name: Build dev
      uses: borales/actions-yarn@v4
      with:
        cmd: encore dev

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit
  # deploy to prod
  deploy:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: executing remote ssh commands using key
          uses: appleboy/ssh-action@v0.1.10
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.KEY }}
            port: ${{ secrets.PORT }}
            script: |
              whoami
              ls -la
